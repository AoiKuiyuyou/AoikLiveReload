# ----- isort -----
[isort]

line_length=79
indent='    '
import_heading_future=coding: utf-8
import_heading_stdlib=Standard imports
import_heading_thirdparty=External imports
import_heading_firstparty=Internal imports
import_heading_localfolder=Local imports
force_single_line=True
force_sort_within_sections=True
lines_after_imports=2
force_adds=True
verbose=True
not_skip=__init__.py
known_standard_library=
known_first_party=
    aoiklivereload
known_third_party=
    aoikwafutil
    bottle
    flask
    sanic
    tornado
    waflib
    watchdog
# ===== isort =====


# ----- flake8 -----
[flake8]

ignore = D200,D203,D212,D301,D401,D404,I100,I201,N805,N801,N812
# ===== flake8 =====


# ----- pycodestyle -----
[pycodestyle]

exclude = .*, __pycache__

max-line-length = 79

show-source = 1

show-pep8 = 1

statistics = 1

verbose = 1
# ===== pycodestyle =====

# ----- pydocstyle -----
[pydocstyle]

ignore = D200,D203,D212,D301,D401,D404,I100,N812
# ===== pydocstyle =====


# ----- nose -----
[nosetests]

verbosity=3

with-doctest=1

# with-coverage=1
#
# This works on Windows but raises error on Linux:
#     ``coverage.misc.CoverageException: No data to report.``

stop=1
# ===== nose =====


# ----- nose2 -----
[unittest]

code-directories = src

test-file-pattern = *_tests.py

test-method-prefix = test_

plugins =
    nose2.plugins.failfast
    nose2.plugins.doctests
    nose2.plugins.coverage
# ===== nose2 =====


# ----- pytest -----
[pytest]

# addopts = --maxfail 3
addopts = --verbose --exitfirst --doctest-modules

python_files = *_tests.py

python_classes = *Test

python_functions = test_*
# ===== pytest =====


# ----- coverage -----
[coverage:run]

omit =
    */test_*.py
    */testing_*.py
    */tests_*.py
    */*_test.py
    */*_testing.py
    */*_tests.py
    */test/*.py
    */testing/*.py
    */tests/*.py
# ===== coverage =====
